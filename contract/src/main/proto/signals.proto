syntax = "proto3";

package tinkoff.public.invest.api.contract.v1;

option go_package = "./;investapi";
option java_package = "ru.tinkoff.piapi.contract.v1";
option java_multiple_files = true;
option csharp_namespace = "Tinkoff.InvestApi.V1";
option objc_class_prefix = "TIAPI";
option php_namespace = "Tinkoff\\Invest\\V1";

import "google/protobuf/timestamp.proto";

service SignalService {
  rpc GetStrategies(GetStrategiesRequest) returns (GetStrategiesResponse);

  rpc GetSignals(GetSignalsRequest) returns (GetSignalsResponse);
}

message GetStrategiesRequest {
  string strategy_id = 1; //Идентификатор стратегии
}

message GetStrategiesResponse {
  repeated Strategy strategies = 1;
}

message Strategy {
  string strategy_id = 1; //	Идентификатор стратегии
  string strategy_name = 2; //	Название стратегии
  string strategy_description = 3; //	Описание стратегии
  string strategy_url = 4; //	Ссылка на страницу с описанием стратегии
}

message GetSignalsRequest {
  string strategy_id = 1; //	Идентификатор стратегии
  google.protobuf.Timestamp from = 2;	//	Дата начала запрашиваемого интервала в часовом поясе UTC.
  string instrument_uid	= 3; //	Идентификатор  бумаги
  google.protobuf.Timestamp to = 4; //	Дата конца запрашиваемого интервала  в часовом поясе UTC.
  bool archive = 5; // Только архивные сигналы, по умолчанию false
}

message GetSignalsResponse {
  repeated Signal signals = 1;
}

message Signal {
  string signal_id = 1; // идентификатор сигнала
  string strategy_id = 2;	// Идентификатор стратегии
  string instrument_uid = 3; // Идентификатор  бумаги
  google.protobuf.Timestamp create_dt = 4; // Датавремя создания сигнала  в часовом поясе UTC.
  int64 lifetime = 5; // Срок действия сигнала, секунд
  string direction = 6; // "buy" / "sell"
  float price = 7; // Цена бумаги на момент формирования сигнала
  float profit = 8; // Расчетная прибыль сигнала
  string info	= 9; // Произвольная информация о сигнале
}
